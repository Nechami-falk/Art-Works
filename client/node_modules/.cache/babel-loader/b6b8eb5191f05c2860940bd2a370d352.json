{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from 'react-toastify';\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 500;\n  if (expectedError) toast('שגיאה לא צפויה התרחשה, נסה מאוחר יותר');\n  return Promise.reject(error);\n});\naxios.interceptors.request.use(function (req) {\n  const token = localStorage.getItem('tokenAdmin');\n  req.headers['x-auth-token'] = token;\n  return req;\n});\nconst http = {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  patch: axios.patch,\n  delete: axios.delete\n};\nexport default http;","map":{"version":3,"sources":["C:/Users/WIN 10/Desktop/לימודים/Art-Work-git/client/src/services/httpService.js"],"names":["axios","toast","interceptors","response","use","error","expectedError","status","Promise","reject","request","req","token","localStorage","getItem","headers","http","get","post","put","patch","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAEAD,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsCC,KAAK,IAAG;AAE5C,QAAMC,aAAa,GAAGD,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GAAjE;AACA,MAAID,aAAJ,EAAmBL,KAAK,CAAE,uCAAF,CAAL;AACnB,SAAOO,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CALD;AAOAL,KAAK,CAACE,YAAN,CAAmBQ,OAAnB,CAA2BN,GAA3B,CAA+B,UAAUO,GAAV,EAAe;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AACAH,EAAAA,GAAG,CAACI,OAAJ,CAAY,cAAZ,IAA8BH,KAA9B;AACA,SAAOD,GAAP;AACD,CAJD;AAOA,MAAMK,IAAI,GAAG;AAETC,EAAAA,GAAG,EAAEjB,KAAK,CAACiB,GAFF;AAGTC,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IAHH;AAITC,EAAAA,GAAG,EAAEnB,KAAK,CAACmB,GAJF;AAKTC,EAAAA,KAAK,EAAEpB,KAAK,CAACoB,KALJ;AAMTC,EAAAA,MAAM,EAAErB,KAAK,CAACqB;AANL,CAAb;AASE,eAAeL,IAAf","sourcesContent":["import axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\n\r\naxios.interceptors.response.use(null, error =>{\r\n\r\n  const expectedError = error.response && error.response.status >= 500;\r\n  if (expectedError) toast ('שגיאה לא צפויה התרחשה, נסה מאוחר יותר');\r\n  return Promise.reject(error);\r\n});\r\n\r\naxios.interceptors.request.use(function (req) {\r\n  const token = localStorage.getItem('tokenAdmin');\r\n  req.headers['x-auth-token'] = token;\r\n  return req;\r\n});\r\n\r\n\r\nconst http = {\r\n\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    patch: axios.patch,\r\n    delete: axios.delete\r\n  };\r\n  \r\n  export default http;"]},"metadata":{},"sourceType":"module"}